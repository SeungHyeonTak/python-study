#자료구조## Stack# class Node:#     def __init__(self, data):#         self.data = data#         self.next = None## class Stack:#     # 생성자#     def __init__(self):#         self.top = None##     def is_empty(self):#         if not self.top:#             return True#         else:#             return False##     #데이터의 추가#     def push(self, data):#         new_node = Node(data) # 새로운 노드에 push된 data를 넣어준다.##         new_node.next = self.top # new_node.next는 None으로 만들어준다?#         self.top = new_node # 지금의 new_node는 Node(data) 이기 때문에 push한값 1이 top에 들어간다.##     #데이터 꺼내오기#     def pop(self):#         if self.is_empty():#             return None##         ret_data = self.top.data##         self.top = self.top.next##         return ret_data##     #데이터 참조#     def peek(self):#         if self.is_empty():#             return None#         return self.top.data##     #데이터 비어있는지 확인#### if __name__ ==  "__main__":#     s = Stack()##     print(s.is_empty())#     s.push(1)#     s.push(2)#     s.pop()#     s.push(3)#     print(f"peek of data : {s.peek()}")#     s.push(4)#     print(f"peek of data : {s.peek()}")##     while not s.is_empty():#         print(s.pop())#############################class Node:    def __init__(self, data):        self.data = data        self.next = Noneclass Stack:    def __init__(self):        self.top = None    def push(self, data):        new_node = Node(data)        new_node.next = self.top        self.top = new_node    def pop(self):        if not self.top:            return None        res_data = self.top.data        self.top = self.top.next        return res_data    def empty(self):        if not self.top:            return True        else:            return False    def peek(self):        if self.empty():            return False        return self.top.dataif __name__ == "__main__":    s = Stack()    s.push(1)    s.push(2)    s.push(3)    print(f'pop : {s.pop()}')    print(f'peek : {s.peek()}')    while not s.empty():        print(s.pop(), end=' ')